---

- name: 创建{{BIN_DIR}}目录
  file: 
    dest={{BIN_DIR}} 
    state=directory mode=0740

#- name: 下载CFSSL
#  get_url: url=https://pkg.cfssl.org/R1.2/{{item.src}} dest={{BIN_DIR}}/{{item.dest}} mode=0540
#  with_items:
#  - { src: 'cfssl_linux-amd64', dest: 'cfssl' } 
#  - { src: 'cfssljson_linux-amd64', dest: 'cfssljson' } 
#  - { src: 'cfssl-certinfo_linux-amd64', dest: 'cfssl-certinfo' }

- name: 复制CFSSL二进制执行文件
  copy: 
    src={{CFSSL_DIR}}/{{item.src}} 
    dest={{BIN_DIR}}/{{item.dest}} 
    mode=0540
  with_items:
  - { src: 'cfssl_linux-amd64', dest: 'cfssl' } 
  - { src: 'cfssljson_linux-amd64', dest: 'cfssljson' } 
  - { src: 'cfssl-certinfo_linux-amd64', dest: 'cfssl-certinfo' }

- name: 创建/etc/kubernetes/ssl目录
  file: 
    dest=/etc/kubernetes/ssl 
    state=directory

- name: 创建ca-config.json文件
  template:
    src=ca-config.json.j2
    dest=./ca-config.json
  run_once: true
  delegate_to: "{{groups['all'][0]}}"

- name: 创建ca-csr.json文件
  template:
    src=ca-csr.json.j2
    dest=./ca-csr.json
  run_once: true
  delegate_to: "{{groups['all'][0]}}"

- name: 生成 CA 证书和私钥
  shell: "{{BIN_DIR}}/cfssl gencert -initca ca-csr.json | {{BIN_DIR}}/cfssljson -bare ca"
  run_once: true
  delegate_to: "{{groups['all'][0]}}"

- name: 获取CA证书到ansible master
  fetch:
    src=/root/{{item}}
    dest=/opt/data/ca/{{item}}
    flat=yes
  with_items:
  - ca-config.json
  - ca.csr
  - ca-csr.json
  - ca-key.pem
  - ca.pem 


- name: 分发CA证书
  copy: 
    src={{CA_DIR}}/{{item}}
    dest=/etc/kubernetes/ssl/{{item}}
  with_items:
  - ca-config.json
  - ca.csr
  - ca-csr.json
  - ca-key.pem
  - ca.pem 


